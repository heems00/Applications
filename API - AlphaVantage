#!/usr/bin/env python3
# scrapeHistoricalPrices.py - Extract historical equity prices from alphavantage
#Source - https://www.alphavantage.co/documentation/ 

#URL API's
#URL - 'https://www.alphavantage.co/query?function={}&symbol={}.{stockExchange}&outputsize={}&datatype={}&apikey=demo&datatype={dataType}'

#Modules
import requests
from alpha_vantage.timeseries import TimeSeries
import pandas as pd

#Variables
    #Required
apiKey ='XXXXXXXXX'
function = 'TIME_SERIES_DAILY'
symbolTicker = 'GOOG'
outputSize = 'full' #can be 'compact' for 100 data points or 'full' for up to 20+ years.
    #Optional 
#stockExchange = '' #'LON' for London Stock Exchange / 'TRT' for Toronto Stock Exchange / 'TRV' for TSV Exchange / 'BSE' for India Stock Exchange / 'SHH' for Shanghai Stock Exchange
#dataType = 'json' is default or can select 'csv'

#Requests Data
url = f'https://www.alphavantage.co/query?function={function}&symbol={symbolTicker}&outputsize={outputSize}&apikey={apiKey}'
res = requests.get(url)
res.raise_for_status()

data = res.json()

#Convert To DataFrame
timeseriesData = data['Time Series (Daily)']
data_list = [(date, *values.values()) for date, values in timeseriesData.items()]
dataFrame = pd.DataFrame(data_list, columns=['Date', 'open', 'high', 'low', 'close', 'volume'])

#Format DataFrame:
dataFrame['Date'] = pd.to_datetime(dataFrame['Date'])
dataFrame.set_index('Date', inplace=True)

#Convert & Save to excel
dataFrame.to_excel(f'{symbolTicker}historicalquotes.xlsx')
